{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "location": {
            "defaultValue": "usgovvirginia",
            "type": "string"
        },
        "name": {
            "defaultValue": "WSDC16-VM",
            "type": "string"
        },
        "vnet": {
            "defaultValue": "CF-Default-VNet",
            "type": "string"
        },
        "subnet": {
            "defaultValue": "Public",
            "type": "string"
        },
        "sku": {
            "defaultValue": "7.5",
            "type": "string"
        },
        "offer": {
            "defaultValue": "CentOS",
            "type": "string"
        },
        "publisher": {
            "defaultValue": "OpenLogic",
            "type": "string"
        },
        "size": {
            "defaultValue": "Standard_B2s",
            "type": "string"
        },
        "user": {
            "defaultValue": "cfadmin",
            "type": "string"
        },
        "password": {
            "defaultValue": "",
            "type": "string"
        },
        "sshKey": {
            "defaultValue": "",
            "type": "string"
        },
        "networkInterfaceName": {
            "defaultValue": "COS75-VM1-NIC",
            "type": "string"
        },
        "publicIpAddressName": {
            "defaultValue": "COS75-VM1-ip",
            "type": "string"
        },
        "publicIpAddressType": {
            "defaultValue": "Static",
            "type": "string"
        },
        "publicIpAddressSku": {
            "defaultValue": "Basic",
            "type": "string"
        }
    },
    "variables": {
        "vnetId": "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnet'))]",
        "subnetRef": "[concat(variables('vnetId'), '/subnets/', parameters('subnet'))]",
        "publicIpRef": "[resourceId('Microsoft.Network/publicIpAddresses/', parameters('publicIpAddressName'))]"
    },
    "resources": [
        {
            "name": "[parameters('name')]",
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2018-04-01",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[concat('Microsoft.Network/networkInterfaces/', parameters('networkInterfaceName'))]"
            ],
            "properties": {
                "osProfile": {
                    "computerName": "[parameters('name')]",
                    "adminUsername": "[parameters('user')]",
                    "adminPassword": "[parameters('password')]",
                    "linuxConfiguration": {
                        "disablePasswordAuthentication": true,
                        "ssh": {
                            "publicKeys": [
                                {
                                    "path": "[concat('/home/', parameters('user'), '/.ssh/authorized_keys')]",
                                    "keyData": "[parameters('sshKey')]"
                                }
                            ]
                        }
                    }
                },
                "hardwareProfile": {
                    "vmSize": "[parameters('size')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "[parameters('publisher')]",
                        "offer": "[parameters('offer')]",
                        "sku": "[parameters('sku')]",
                        "version": "latest"
                    },
                    "osDisk": {
                        "createOption": "fromImage",
                        "managedDisk": {
                            "storageAccountType": "Premium_LRS"
                        }
                    },
                    "dataDisks": []
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaceName'))]"
                        }
                    ]
                }
            }
        },
        {
            "name": "[parameters('networkInterfaceName')]",
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2018-04-01",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[concat('Microsoft.Network/publicIpAddresses/', parameters('publicIpAddressName'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "subnet": {
                                "id": "[variables('subnetRef')]"
                            },
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIpAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIpAddresses', parameters('publicIpAddressName'))]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "name": "[parameters('publicIpAddressName')]",
            "type": "Microsoft.Network/publicIpAddresses",
            "apiVersion": "2017-08-01",
            "location": "[parameters('location')]",
            "properties": {
                "publicIpAllocationMethod": "[parameters('publicIpAddressType')]"
            },
            "sku": {
                "name": "[parameters('publicIpAddressSku')]"
            }
        }
    ],
    "outputs": {
        "name": {
            "type": "string",
            "value": "[parameters('name')]"
        },
        "adminUsername": {
            "type": "string",
            "value": "[parameters('user')]"
        },
        "publicIP": {
            "type": "string",
            "value": "[reference(variables('publicIpRef')).ipAddress]"
        },
        "webUrl": {
            "type": "string",
            "value": "[concat('http://', reference(variables('publicIpRef')).ipAddress)]"
        },
        "ssh": {
            "type": "string",
            "value": "[concat('ssh ', parameters('user'), '@', reference(variables('publicIpRef')).ipAddress)]"
        }
    }
}